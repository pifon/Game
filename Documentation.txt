Draft of implementation of Tic-Tac-Toe game 

GET /game/{gameID}
	Get representation specific game 
	Payload: None
	Response: 
		200:
			{
				"id": 1, // int gameID
				"x": "userOne", // string username playing x
				"o": "userTwo", // string username playing o
				"board": ["o","x","o","","x","","o","","x"], // array board representation
				"winner": "", // string "" (in-play),"d" (draw), "x" or "o" )
				"revenge": 0  // int - gameID of revenge game or 0 if not created
			}
	Errors:
		400: Bad Request : "Invalid game id" 
		401: Unauthorised : "Not logged in"
		404: Not Found : "Game not found"


POST /game
	Create a new game as logged in userOne
	Payload: None
	Response:
		201: Created
			{
				"id": 321,
				"x": "userOne",
				"o": "",
				"board": ["","","","","","","","",""],
				"winner": "",
				"revenge": 0
			}
	Errors:
		401: Unauthorised : "Not logged in"
		429: Too Many Requests : "Game opening already created"

GET /game/join
	List joinable games
	Payload: None
	Response:
		200:
			[
				{
					"id": 1,
					"x": "userOne"
				},
				{
					"id": 123,
					"x": "userX"
				}
			]
	Errors:
		401: Unauthorised : "Not logged in"
		404: Not Found : "No games available"

PATCH /game/join/{gameID}
	Join the game (logged in as userTwo) and make the first move
	Joiner must be different then creator and second player must not be taken
	Payload: 
		{
			"board": [
				"","","",
				"","o","",
				"","",""
				]
		}
	Response:
		200:
			{
				"id": 1,
				"x": "userOne",
				"o": "userTwo",
				"board": ["","","","","o","","","",""],
				"winner": ""
				"revenge": 0
			}
	Errors:
		400: Bad Request  : "Invalid game id or format" 
		401: Unauthorised : "Not logged in"
		404: Not Found : "Game not found"
		409: Conflict : "Game cannot be joined"

PATCH /game/{gameID}
	Makes a move (in example: userOne) in right turn changing one mark on board
	Payload: 
		{
			"board": [
				"x","o","x",
				"","o","",
				"","x",""
				]
		}
	Response:
		200:
			{
				"id": 123,
				"x": "userOne",
				"o": "userTwo",
				"board": ["x","o","x","","o","","","x",""],
				"winner": ""
				"revenge": 0
			}
	Errors:
		400: Bad Request : "Invalid game id or format"
		401: Unauthorised : "Not logged in"
		403: Forbidden : "Not a player"
		404: Not Found : "Game not found"
		409: Conflict : "Wrong move"

POST /revenge/{gameID}
	Create a revenge game (in example userTwo). 
	Marks assignment to match original game.
	Payload: 
		{
			"board": [
				"","","",
				"","o","",
				"","",""
				]
		}
	Response:
		201: Created
			{
				"id": 322,
				"x": "userOne",
				"o": "userTwo",
				"board": ["","","","","o","","","",""],
				"winner": "",
				"revenge": 0
			}
	Errors:
		400: Bad Request : "Invalid game id or format"
		401: Unauthorised : "Not logged in"
		403: Forbidden : "Not a player"
		404: Not Found : "Game not found"
		409: Conflict : "Game not finished"
		429: Too Many Requests : "Revenge game exists"